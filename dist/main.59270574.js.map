{"version":3,"sources":["main.js"],"names":["console","log","$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.59270574.js","sourceRoot":"..\\src","sourcesContent":["console.log(1)\nconst $siteList = $('.siteList')\n//操作siteList元素\nconst $lastLi = $siteList.find('li.last')\n//操作siteList元素里类名为last的li元素\nconst x = localStorage.getItem('x')\nconst xObject = JSON.parse(x)\nconst hashMap = xObject || [{\n    logo: 'a', logoType: 'image', url: 'https://developer.mozilla.org/'\n},\n{\n    logo: 'g', logoType: 'image', url: 'https://github.com/'\n},\n{\n    logo: 'j', logoType: 'image', url: 'https://juejin.im/'\n},\n{\n    logo: 'j', logoType: 'image', url: 'http://www.iciba.com/'\n},\n{\n    logo: 'w', logoType: 'image', url: 'https://wangdoc.com/html/'\n},\n{\n    logo: 'y', logoType: 'image', url: 'https://www.yuque.com/'\n}\n]\nconsole.log(hashMap)\n\n//将数据以哈希表组成的数组存入hashmap中\nconst simplifyUrl = (url) => {\n    return url.replace('https://', '').replace('http://', '').replace('www.', '').replace(/\\/.*/, '')\n    //正则 删除/后面的内容\n}\nconst render = () => {\n    $siteList.find('li:not(.last)').remove()\n    //删除除最后一个节点外的节点\n    hashMap.forEach((node, index) => {\n        const $li = $(` <li class=\"site\">\n        <div class=\"logo\">${node.logo}</div>\n         <h3>${simplifyUrl(node.url)}</h3>\n         <div class=\"close\"><svg class=\"icon iconstyle\" >\n         <use xlink:href=\"#icon-guanbi\"></use>\n       </svg></div>\n       </li>`).insertBefore($lastLi)\n        $li.on('click', () => {\n            window.open(node.url)\n        })\n        $li.on('click', '.close', (e) => {\n            e.stopPropagation() // 阻止冒泡\n            hashMap.splice(index, 1)\n            render()\n        })\n    })\n}\nrender()\n\n// 遍历数据\n$('.addButton').on('click', () => {\n    let url = window.prompt('请问，你要添加的网址是啥')\n    if (url.indexOf('http') !== 0) {\n        url = 'https://' + url\n    }\n\n    hashMap.push({ logo: simplifyUrl(url)[0], logoType: \"text\", url: url })\n    render()\n})\nwindow.onbeforeunload = () => {\n    const string = JSON.stringify(hashMap)\n    localStorage.setItem('x', string)\n}\n$(document).on('keypress', (e) => {\n    const { key } = e\n    for (let i = 0; i < hashMap.length; i++) {\n        if (hashMap[i].logo.toLowerCase() === key) {\n            window.open(hashMap[i].url)\n        }\n    }\n})\n"]}